(in-package :drawer)


(let ((descartes (make-tonnetz '(6 4) '(2 1))))
  (init-row descartes '(nil -1) -1 '("D♭$^\\ast$" "A♭$^\\ast$" "E♭" "B♭$^\\ast$"))
  (init-row descartes '(nil 0) -2 '("B♭" "F" "C" "G" "D$^\\ast$" "A$^\\ast$"))
  (init-row descartes '(nil 1) -2 '("D" "A" "E" "B" "F♯$^\\ast$"))
  (init-row descartes '(nil 2) -2 '("F♯" "C♯" "G♯" "D♯$^\\ast$"))
  (add-connections descartes '(1 0))
  (remove-connection descartes '(2 0) '(3 0))
  (let* ((btikz-descartes (make-backend-tikz :filename "stembridge-netz-descartes-diplomatic.tex"))
         (ts-descartes
           (render descartes (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 4)))
    (draw-with-multiple-backends (list btikz-descartes)
                                 (list ts-descartes))
    (compile-tikz btikz-descartes)
    (add-connection descartes '(2 0) '(3 0))
    (add-connections descartes '(0 1))
    (add-connections descartes '(1 -1))
    (let ((btikz-descartes-normalised (make-backend-tikz :filename "stembridge-netz-descartes-normalised.tex"))
          (ts-descartes-normalised (render descartes (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 2.7)))
      (draw-with-multiple-backends (list btikz-descartes-normalised)
                                   (list ts-descartes-normalised))
      (compile-tikz btikz-descartes-normalised)

      (update-connection-style descartes '(2 0) '(3 0) '(:line-type :dotted))
      (update-connection-style descartes '(2 1) '(3 0) '(:line-type :dotted))
      (let ((btikz-descartes-idealised (make-backend-tikz :filename "stembridge-netz-descartes-idealised.tex"))
            (ts-descartes-idealised
              (render descartes (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 2)))
        (draw-with-multiple-backends (list btikz-descartes-idealised)
                                     (list ts-descartes-idealised))
        (compile-tikz btikz-descartes-idealised)))))

(let ((salinas (make-tonnetz '(5 6) '(2 2))))
  (init-row salinas '(nil -2) 2 '("G♭$+^\\ast$"))
  (init-row salinas '(nil -1) -2 '("G♭$+^\\ast$" "D♭$^\\ast$" "A♭$^\\ast$" "E♭" "B♭$^\\ast$"))
  (init-row salinas '(nil 0) -2 '("B♭" "F" "C" "G" "D$^\\ast$"))
  (init-row salinas '(nil 1) -2 '("D" "A" "E" "B$^\\ast$" "F♯$^\\ast$"))
  (init-row salinas '(nil 2) -2 '("F♯" "C♯" "G♯" "D♯$^\\ast$" "A♯$+$"))
  (init-row salinas '(nil 3) -2 '("A♯$+^\\ast$" "E♯" "B♯"))
  (add-connections salinas '(1 0))
  (remove-connection salinas '(-2 -1) '(-1 -1))
  (remove-connection salinas '(1 2) '(2 2))
  (remove-connection salinas '(-2 3) '(-1 3))
  (remove-connection salinas '(-1 3) '(0 3))
  (let* ((btikz-salinas (make-backend-tikz :filename "stembridge-netz-salinas-diplomatic.tex"))
         (ts-salinas
           (render salinas (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 4)))
    (draw-with-multiple-backends (list btikz-salinas)
                                 (list ts-salinas))
    (compile-tikz btikz-salinas)
    (add-connection salinas '(-2 -1) '(-1 -1))
    (add-connection salinas '(1 2) '(2 2))
    (add-connection salinas '(-2 3) '(-1 3))
    (add-connection salinas '(-1 3) '(0 3))
    (add-connections salinas '(0 1))
    (add-connections salinas '(1 -1))
    (let ((btikz-salinas-normalised (make-backend-tikz :filename "stembridge-netz-salinas-normalised.tex"))
          (ts-salinas-normalised (render salinas (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 2.7)))
      (draw-with-multiple-backends (list btikz-salinas-normalised)
                                   (list ts-salinas-normalised))
      (compile-tikz btikz-salinas-normalised)
      (update-connection-style salinas '(1 -1) '(2 -2) '(:line-type :dotted))
      (update-connection-style salinas '(2 -1) '(2 -2) '(:line-type :dotted))
      (update-connection-style salinas '(-2 -1) '(-2 0) '(:line-type :dotted))
      (update-connection-style salinas '(-2 -1) '(-1 -1) '(:line-type :dotted))
      (update-connection-style salinas '(2 2) '(1 2) '(:line-type :dotted))
      (update-connection-style salinas '(2 2) '(2 1) '(:line-type :dotted))
      (update-connection-style salinas '(2 2) '(2 1) '(:line-type :dotted))
      (update-connection-style salinas '(-2 3) '(-2 2) '(:line-type :dotted))
      (update-connection-style salinas '(-2 3) '(-1 2) '(:line-type :dotted))
      (update-connection-style salinas '(-2 3) '(-1 3) '(:line-type :dotted))
      (update-connection-style salinas '(-1 3) '(-1 2) '(:line-type :dotted))
      (update-connection-style salinas '(-1 3) '(0 2) '(:line-type :dotted))
      (update-connection-style salinas '(-1 3) '(0 3) '(:line-type :dotted))
      (update-connection-style salinas '(0 3) '(0 2) '(:line-type :dotted))
      (update-connection-style salinas '(0 3) '(1 2) '(:line-type :dotted))
      (let ((btikz-salinas-idealised (make-backend-tikz :filename "stembridge-netz-salinas-idealised.tex"))
            (ts-salinas-idealised
              (render salinas (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 2.7)))
        (draw-with-multiple-backends (list btikz-salinas-idealised)
                                     (list ts-salinas-idealised))
        (compile-tikz btikz-salinas-idealised)))))


(let ((willard (make-tonnetz '(6 4) '(3 1))))
  (init-row willard '(nil -1) -1 '("D♭$^\\ast$" "A♭$^\\ast$" "E♭" "B♭$^\\ast$"))
  (init-row willard '(nil 0) -2 '("B♭" "F" "C" "G$^\\ast$" "D$^\\ast$"))
  (init-row willard '(nil 1) -3 '("G" "D" "A" "E" "B$^\\ast$" "F♯$^\\ast$"))
  (init-row willard '(nil 2) -3 '("B" "F♯" "C♯" "G♯" "D♯$^\\ast$" "A♯$^{\\ast\\ast}$"))
  (add-connections willard '(1 0))
  (remove-connection willard '(-3 1) '(-2 1))
  (remove-connection willard '(-3 2) '(-2 2))
  (remove-connection willard '(2 2) '(1 2))
  (let* ((btikz-willard (make-backend-tikz :filename "stembridge-netz-willard-diplomatic.tex"))
         (ts-willard
           (render willard (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 4)))
    (draw-with-multiple-backends (list btikz-willard)
                                 (list ts-willard))
    (compile-tikz btikz-willard)
    (add-connection willard '(-3 1) '(-2 1))
    (add-connection willard '(-3 2) '(-2 2))
    (add-connection willard '(2 2) '(1 2))
    (add-connections willard '(0 1))
    (add-connections willard '(1 -1))
    (let ((btikz-willard-normalised (make-backend-tikz :filename "stembridge-netz-willard-normalised.tex"))
          (ts-willard-normalised (render willard (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 2.7)))
      (draw-with-multiple-backends (list btikz-willard-normalised)
                                   (list ts-willard-normalised))
      (compile-tikz btikz-willard-normalised)
      (update-connection-style willard '(-3 1) '(-2 1) '(:line-type :dotted))
      (update-connection-style willard '(-3 1) '(-2 0) '(:line-type :dotted))
      (update-connection-style willard '(-3 1) '(-3 2) '(:line-type :dotted))
      (update-connection-style willard '(-3 2) '(-2 1) '(:line-type :dotted))
      (update-connection-style willard '(-3 2) '(-2 2) '(:line-type :dotted))
      (update-connection-style willard '(2 2) '(2 1) '(:line-type :dotted))
      (update-connection-style willard '(2 2) '(1 3) '(:line-type :dotted))
      (update-connection-style willard '(2 2) '(1 2) '(:line-type :dotted))
      (let ((btikz-willard-idealised (make-backend-tikz :filename "stembridge-netz-willard-idealised.tex"))
            (ts-willard-idealised
              (render willard (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 2.7)))
        (draw-with-multiple-backends (list btikz-willard-idealised)
                                     (list ts-willard-idealised))
        (compile-tikz btikz-willard-idealised)))))

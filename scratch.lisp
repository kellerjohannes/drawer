(in-package :drawer)


(let ((system (make-tonnetz '(6 4) '(2 1))))
  (init-row system '(nil -1) -1 '("D♭" "A♭" "E♭" "B♭"))
  (init-row system '(nil 0) -2 '("B♭" "F" "C" "G" "D" "A"))
  (init-row system '(nil 1) -2 '("D" "A" "E" "B" "F♯"))
  (init-row system '(nil 2) -2 '("F♯" "C♯" "G♯" "D♯"))
  (add-connections system '(1 0))
  (add-connections system '(0 1))
  (add-connections system '(1 -1))
  ;; (remove-connection system '(2 0) '(3 0))
  ;; (remove-connection system '(2 1) '(3 0))
  (update-connection-style system '(2 0) '(3 0) '(:line-type :dotted))
  (update-connection-style system '(2 1) '(3 0) '(:line-type :dotted))
  (let* ((bsvg (make-backend-svg 3100 900))
         (bhtml (make-backend-html))
         (btikz (make-backend-tikz))
         (ts (render system (pt 20 20) (list (pt 10 0) (rotate-point (pt 0 10) 210)) 2.5)))
    (draw-with-multiple-backends (list bsvg bhtml btikz)
                                 (list ts))
    (compile-tikz btikz)))


(let ((system (make-tonnetz '(4 7 5) '(2 3 2))))
  (init-row system '(nil 2 0) -2 '("36:25" "9:5"))
  (init-row system '(nil 1 0) -2 '("48:25" "6:5" "3:2" "15:8"))
  (init-row system '(nil 0 0) -1 '("8:5" "1:1" "5:4"))
  (init-row system '(nil -1 0) -1 '("16:15" "4:3" "5:3"))
  (init-row system '(nil -2 0) 0 '("16:9" "10:9"))
  (init-row system '(nil -3 0) 0 '("32:27" "40:27"))
  (init-row system '(nil 0 1) -1 '("64:35" "8:7" "10:7"))
  (init-row system '(nil 1 1) -1 '("48:35" "12:7"))
  (init-row system '(nil 2 1) 0 '("9:7"))
  (init-row system '(nil -1 1) 0 '("32:21"))
  (init-row system '(nil -2 1) 0 '("64:63"))
  (init-row system '(nil 1 2) 0 '("96:49"))
  (init-row system '(nil 0 -1) -1 '("7:5" "7:4" "35:32"))
  (init-row system '(nil -1 -1) 0 '("7:6"))
  (init-row system '(nil -2 -1) 0 '("14:9" "35:18"))
  (init-row system '(nil -3 -1) 1 '("35:27"))
  (init-row system '(nil 1 -1) -1 '("21:20" "21:16"))
  (init-row system '(nil 0 -2) -1 '("49:40"))
  (add-connections system '(1 0 0) :style-update '(:line-thickness :normal))
  (add-connections system '(0 1 0) :style-update '(:line-thickness :thick))
  (add-connections system '(0 0 1) :style-update '(:line-type :dashed))
  (let* ((btikz (make-backend-tikz))
         (ts (render system (pt 30 30) (list (pt 18 0)
                                             (pt 0 18)
                                             (rotate-point (pt 0 8.5) 145))
                     2.5)))
    (draw-with-multiple-backends (list btikz) (list ts))
    (compile-tikz btikz)))
